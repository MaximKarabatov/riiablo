// automatically generated by the FlatBuffers compiler, do not modify

package com.riiablo.net.packet.d2gs;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class MonsterP extends Table {
  public static MonsterP getRootAsMonsterP(ByteBuffer _bb) { return getRootAsMonsterP(_bb, new MonsterP()); }
  public static MonsterP getRootAsMonsterP(ByteBuffer _bb, MonsterP obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public MonsterP __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int monsterId() { int o = __offset(4); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 0; }

  public static int createMonsterP(FlatBufferBuilder builder,
      int monsterId) {
    builder.startObject(1);
    MonsterP.addMonsterId(builder, monsterId);
    return MonsterP.endMonsterP(builder);
  }

  public static void startMonsterP(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addMonsterId(FlatBufferBuilder builder, int monsterId) { builder.addShort(0, (short)monsterId, (short)0); }
  public static int endMonsterP(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

